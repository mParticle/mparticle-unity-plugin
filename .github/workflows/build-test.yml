name: Checks

on: [push, pull_request]

jobs:
  pr-branch-check-name:
    name: "Check PR for semantic branch name"
    if: ${{ github.event.pull_request }}
    uses: mParticle/mparticle-workflows/.github/workflows/pr-branch-check-name.yml@stable
  pr-title-check:
    name: "Check PR for semantic title"
    if: ${{ github.event.pull_request }}
    uses: mParticle/mparticle-workflows/.github/workflows/pr-title-check.yml@stable
  pr-branch-target-gitflow:
    name: "Check PR for semantic target branch"
    if: ${{ github.event.pull_request }}
    uses: mParticle/mparticle-workflows/.github/workflows/pr-branch-target-continuous.yml@stable
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    needs: [pr-branch-check-name, pr-title-check, pr-branch-target-gitflow]
    if: always() && !failure()
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows # Build a Windows standalone.
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          - StandaloneLinux64 # Build a Linux 64-bit standalone.
          - iOS # Build an iOS player.
          - Android # Build an Android .apk standalone app.
          - WebGL # WebGL.
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v2
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - uses: game-ci/unity-builder@v2
        env:
            UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
            UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
            UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v2
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
